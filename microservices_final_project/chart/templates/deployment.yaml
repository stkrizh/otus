apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-auth
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app: auth
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
        app: auth
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.auth.repository }}:{{ .Values.image.auth.tag }}"
          imagePullPolicy: Always
          env:
            - name: POSTGRESQL_URL
              value: "postgres://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ .Values.postgresql.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local:5432/{{ .Values.postgresql.postgresqlDatabase }}"
            - name: RABBITMQ_URL
              value: "amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@{{ .Values.rabbitmq.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http


---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-billing
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app: billing
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
        app: billing
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.billing.repository }}:{{ .Values.image.billing.tag }}"
          imagePullPolicy: Always
          env:
            - name: POSTGRESQL_URL
              value: "postgres://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ .Values.postgresql.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local:5432/{{ .Values.postgresql.postgresqlDatabase }}"
            - name: RABBITMQ_URL
              value: "amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@{{ .Values.rabbitmq.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http


---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-notification
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      app: notification
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
        app: notification
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.notification.repository }}:{{ .Values.image.notification.tag }}"
          imagePullPolicy: Always
          env:
            - name: POSTGRESQL_URL
              value: "postgres://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ .Values.postgresql.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local:5432/{{ .Values.postgresql.postgresqlDatabase }}"
            - name: RABBITMQ_URL
              value: "amqp://{{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }}@{{ .Values.rabbitmq.fullnameOverride }}.{{ .Release.Namespace }}.svc.cluster.local"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
